generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int   @id @default(autoincrement())
  email     String @unique
  password  String
  name      String
  baekjoonName String
  department     String @default("unknown")
  studentId String
  rank      Int?
  tier      String?
  solvedNum Int?
  createdAt DateTime @default(now())

  solvedProblems SolvedProblem[]
  snapshots SolveSnapshot[]
  weeklyRanks WeeklyRank[]

  comments       Comment[] //사용자 댓글
  questSolves  QuestSolve[]
}

model SolveSnapshot {
  id          Int      @id @default(autoincrement())
  userId      Int
  solvedCount Int
  snapedAt    DateTime

  user        User    @relation(fields: [userId], references:[id])

  @@index([snapedAt])
}

model WeeklyRank {
  id         Int      @id @default(autoincrement())
  weekStart  DateTime 
  department      String
  userId     Int
  solvedThisWeek Int  

  user       User     @relation(fields: [userId], references: [id])

  @@index([weekStart, department])
  @@unique([weekStart, userId, department])
}

model SolvedProblem {
  id         Int      @id @default(autoincrement())
  userId     Int
  problemId  Int
  solvedAt   DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])

  @@unique([userId, problemId]) // 중복 방지하기 위해
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  code    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DailyQuest {
  date      DateTime
  problemId Int

  questSolves  QuestSolve[]

  @@id([date, problemId])
}

model QuestSolve {
  userId    Int
  date      DateTime
  problemId Int
  solvedAt  DateTime @default(now())

  user  User        @relation(fields:[userId], references:[id])
  quest DailyQuest  @relation( fields:[date, problemId], references:[date, problemId])

  @@id([userId, date, problemId])
}
