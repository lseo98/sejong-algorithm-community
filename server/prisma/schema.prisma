generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  name         String   @unique
  baekjoonName String
  department   String   @default("unknown")
  studentId    String   @unique
  rank         Int?
  tier         String?
  solvedNum    Int?
  createdAt    DateTime @default(now())
  profileImage  String?

  solvedProblems SolvedProblem[]
  posts   Post[]  // 사용자가 작성한 게시글 목록
  comments       Comment[] //사용자 댓글
  questSolves  QuestSolve[]
  userCards UserCard[] //사용자 카드
}

model SolvedProblem {
  id        Int      @id @default(autoincrement())
  userId    Int
  problemId Int
  solvedAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, problemId]) // 중복 방지하기 위해
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String    @db.Text
  content   String    @db.Text
  code      String?   @db.Text
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId  Int

  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  text      String  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model QuestSolve {
  userId    Int
  date      DateTime @db.DateTime(0) 
  problemId Int
  solvedAt  DateTime @default(now())

  user  User        @relation(fields:[userId], references:[id])

  @@id([userId, date, problemId])
}


model Card {
  id      Int    @id @default(autoincrement())
  title   String @unique
  comment String
  image   String

  ownedBy UserCard[]
}

model UserCard {
  id        Int      @id @default(autoincrement())
  userId    Int
  cardId    Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  card Card @relation(fields: [cardId], references: [id])

  @@unique([userId, cardId])
}
